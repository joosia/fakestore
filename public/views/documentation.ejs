<!DOCTYPE html>
<html lang="fi">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <meta http-equiv="X-UA-Compatible" content="ie=edge">
   <link rel="stylesheet" href="styles/documentation.css">
   <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
   <title>Dokumentaatio</title>
</head>

<body>

   <nav class="columns">
      <div class="column is-3 side-nav is-hidden-mobile is-fixed-top">
         <section class="section">
            <h1 class="is-size-3"><a href="/"><span class="has-text-weight-bold has-text-primary">Fake</span><span>$tore</span></a></h1>
            <p class="subtitle is-marginless">Dokumentaatio</p>
         </section>
         <section class="section">
            <div class="content">
               <p class="subtitle">Sisällysluettelo</p>
               <ol class="table-of-contents-side">
                  <li>
                     <a href="#johdanto" class="subtitle">Johdanto</a>
                  </li>
                  <li>
                     <a href="#suunnittelu" class="subtitle">Suunnittelu</a>
                  </li>
                  <li>
                     <a href="#kehitysymparisto" class="subtitle">Kehitysympäristön pystyttäminen</a>
                  </li>
               </ol>
            </div>
         </section>
      </div>
      <div class="column is-offset-4 is-7 content-column">
         <section class="section">
            <div class="content">
               <p id="johdanto" class="title has-text-centered has-text-primary">Johdanto</p>
               <div class="box">
                  <p>FakeStore-projekti on nimensä mukaisesti kuvitteellinen verkkokauppa. Projekti oli tarkoitus
                     toteuttaa
                     lopputyönä web-ohjelmointi ja web-visualisointi opintojaksoihin ,mutta koska valtaosa työmäärästä
                     ja projektin annista, meni kuitenkin enemmän serveripuolen ohjelmointiin, päädyttiin lopulta
                     käyttämään työtä vain visualisointikurssiin. Projektia on kuitenkin tarkoitus myös laajentaa
                     myöhemmin, jotta sillä voisi hyväksilukea ainakin osia myös tulevista opintojaksoista. Tällä
                     hetkellä esimerkiksi verkkokaupan tietokanta ei rakenteeltaan tai toimivuudeltaan vastaa
                     todellisuutta. Tietokanta on kuitenkin tarkoituksella jätetty vajaaksi, sillä aihepiiri menee
                     hieman opintojakson sisällön ulkopuolelle.
                  </p>
                  <p>
                     Koska suunnitelmat menivät uusiksi kesken työskentelyn, jäi projekti myös vajaaksi
                     front-end-puolen osalta. Prjektissa päätettiin käyttää entuudesta tuntematon CSS-kirjastoa Bulmaa,
                     joka myös teki työskentelystä huomattavasti hitaampaa, kuin se olisi ollut ilman kirjastoa tai
                     käyttäen tutumpaa Bootstrappia.
                  </p>
                  <p>
                     Tavoitteena oli luoda moderni käyttöliittymä ja käyttää projektin toteutukseen vain front-end puolelta tuttuja kieliä HTML, CSS ja Javascript. Tällainen toimintapa on ollut jo pidemmän aikaa mahdollista käyttäen Node.js runtime-ympäristöä, joka mahdollistaa myös palvelinpään ohjelmoinnin. Node.js pohjautuu Googlen kehittämään V8 Javascript-moottoriin, ja nykyisin Node.js pyörii erittäin monien web-applikaatioiden taustalla.
                  </p>
               </div>
            </div>
            <div class="content">
               <p id="suunnittelu" class="title has-text-centered has-text-primary">Suunnittelu</p>
               <div class="box">
                  <p>FakeStore-projekti on nimensä mukaisesti kuvitteellinen verkkokauppa. Projekti toteutettiin
                     lopputyönä web-ohjelmointi ja web-visualisointi opintojaksoihin. Projektia on tarkoitus myös
                     laajentaa myöhemmin, jotta sillä voisi hyväksilukea ainakin osia myös tulevista opintojaksoista.
                     Tällä hetkellä esimerkiksi verkkokaupan tietokanta ei rakenteeltaan täysin vastaa todellisuutta.
                     Tietokanta on kuitenkin tarkoituksella jätetty vajaaksi, sillä aihepiiri menee hieman
                     opintojaksojen
                     sisällön ulkopuolelle.
                  </p>
                  <p>
                     Tavoitteena oli luoda moderni käyttöliittymä ja käyttää projektin toteutukseen vain front-end
                     puolelta
                     tuttuja kieliä HTML, CSS ja Javascript. Tällainen toimintapa on ollut jo pidemmän aikaa
                     mahdollista
                     käyttäen Node.js runtime-ympäristöä, joka mahdollistaa myös palvelinpään ohjelmoinnin. Node.js
                     pohjautuu Googlen kehittämään V8 Javascript-moottoriin, ja nykyisin Node.js pyörii erittäin monien
                     web-applikaatioiden taustalla.
                  </p>
               </div>
            </div>
            <div class="content">
               <p id="kehitysymparisto" class="title has-text-centered has-text-primary">Kehitysympäristön
                  pystyttäminen</p>
               <div class="box">
                  <p>FakeStore-projekti on nimensä mukaisesti kuvitteellinen verkkokauppa. Projekti toteutettiin
                     lopputyönä web-ohjelmointi ja web-visualisointi opintojaksoihin. Projektia on tarkoitus myös
                     laajentaa myöhemmin, jotta sillä voisi hyväksilukea ainakin osia myös tulevista opintojaksoista.
                     Tällä hetkellä esimerkiksi verkkokaupan tietokanta ei rakenteeltaan täysin vastaa todellisuutta.
                     Tietokanta on kuitenkin tarkoituksella jätetty vajaaksi, sillä aihepiiri menee hieman
                     opintojaksojen
                     sisällön ulkopuolelle.
                  </p>
                  <p>
                     Tavoitteena oli luoda moderni käyttöliittymä ja käyttää projektin toteutukseen vain front-end
                     puolelta
                     tuttuja kieliä HTML, CSS ja Javascript. Tällainen toimintapa on ollut jo pidemmän aikaa
                     mahdollista
                     käyttäen Node.js runtime-ympäristöä, joka mahdollistaa myös palvelinpään ohjelmoinnin. Node.js
                     pohjautuu Googlen kehittämään V8 Javascript-moottoriin, ja nykyisin Node.js pyörii erittäin monien
                     web-applikaatioiden taustalla.
                  </p>
               </div>
            </div>
         </section>
      </div>
   </nav>
   <script src="scripts/documentation.js"></script>
</body>

</html>